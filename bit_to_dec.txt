library IEEE;
use IEEE.STD_LOGIC_1164.ALL;

entity bin_to_dec is
 Port( signal num1 : std_logic_vector(31 downto 0);
   signal num2 : std_logic_vector(31 downto 0);
   signal num3 : std_logic_vector(31 downto 0);
   signal num_mux : std_logic_vector(31 downto 0);
   );
end entity;

architecture convert_bin_to_dec of bin_to_dec is
begin
 num_mux <= std_logic_vector(unsigned(num0)+1) when cpt50M_Comp = '1' else num1;


 num2(3 downto 0) <= num_mux(3 downto 0);
 loopA:
  for i in 0 to 5 generate
   num2(4*i+7 downto 4*i+4) <= std_logic_vector(unsigned(num_mux(4*i+7 downto 4*i+4))+1) when num2(4*i+3 downto 4*i) > "1001"
     else num_mux(4*i+7 downto 4*i+4);
   num3(4*i+3 downto 4*i) <= "0000" when num2(4*i+3 downto 4*i) > "1001"
     else num2(4*i+3 downto 4*i);
     
 end generate loopA;

 num3(31 downto 28)<= num2(31 downto 28);

 num1 <= (others => '0') when reset='1' else
  num3 when rising_edge(clk50);

end architecture;